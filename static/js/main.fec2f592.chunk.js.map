{"version":3,"sources":["Mic.tsx","speechlyTools.ts","ConnectionContext.tsx","CanvasEditor.ts","Editor.tsx","Onboard.tsx","App.tsx","index.js","img/logo.png"],"names":["passiveSupported","options","window","addEventListener","removeEventListener","err","Mic","props","rootDiv","onKeyUp","onKeyDown","onUnmount","React","createRef","onDown","onUp","event","cb","this","current","passive","document","onkeydown","e","handleSpacebar","onkeyup","clientConnecting","clientState","ClientState","Connecting","clientConnected","Connected","rootClassName","classNames","micClassName","hidden","Microphone__button__active","Recording","Microphone__button__inactive","Stopping","helpClassName","console","log","stateToString","className","ref","style","height","CircularProgress","size","xmlns","aria-hidden","tabIndex","viewBox","stroke","strokeWidth","cx","cy","r","fill","d","transform","x","y","Component","keyCode","preventDefault","entity2canonical","collectEntity","entityList","entityType","entities","filter","item","type","length","value","toLowerCase","updateImageEditorBySegmentChange","segment","imageEditor","isFinal","intent","undo","filterName","enableFilter","disableFilter","propertyName","incrementProperty","decrementProperty","defaultState","stopContext","_event","startContext","Disconnected","words","contextId","ConnectionContext","createContext","ConnectionContextProvider","browserClientStateChanged","setState","state","updateStateBySegmentChange","updateWords","id","segmentId","newWords","i","parseInt","index","transcriptDiv","html","Object","keys","map","key","sort","join","innerHTML","client","error","initialize","closeClient","close","undefined","clientBasicParams","appId","language","Client","onSegmentChange","onStateChange","Provider","children","CanvasEditor","editorHTMLDiv","imageUrl","canvas","htmlCanvas","operatorStack","imageObject","stepSize","Map","tmp","get","push","name","updateImage","pop","buildEditorState","filters","brightness","fabric","Image","Brightness","contrast","Contrast","saturation","Saturation","kodachrome","makeKodachromeFilter","vintage","makeVintageFilter","technicolor","makeTechnicolorFilter","polaroid","makePolaroidFilter","sepia","Sepia","grayscale","Grayscale","applyFilters","renderAll","cleanEditorState","op","resize","w","innerWidth","h","innerHeight","width","ColorMatrix","matrix","createElement","appendChild","prototype","transparentCorners","Canvas","outerScope","fromURL","img","oImg","resizeElements","add","set","imageOriginalHeight","imageOriginalWidth","imgRatio","winRatio","container","getElementsByClassName","scaleX","scaleY","left","top","Editor","imageEditorRef","useRef","transcriptDivRef","useState","imageEditorInstance","setImageEditorInstance","imagePath","setImagePath","process","useEffect","location","imgPath","storageObject","localStorage","setItem","JSON","stringify","json","getItem","parse","editor","Consumer","Onboard","allowAudio","setAllowAudio","images","setImages","imageInput","buttonClass","editorLinkParams","pathname","slice","src","logo","alt","path","onChange","files","newImage","URL","createObjectURL","checked","target","htmlFor","to","App","exact","component","ReactDOM","render","getElementById","module","exports"],"mappings":"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","file":"static/js/main.fec2f592.chunk.js","sourcesContent":["import classNames from \"classnames\";\nimport React from \"react\";\nimport { ClientState, stateToString } from \"@speechly/browser-client\";\nimport { CircularProgress } from \"@material-ui/core\";\n\nlet passiveSupported = false;\ntry {\n  const options = {\n    get passive() {\n      // This function will be called when the browser attempts to access the passive property.\n      passiveSupported = true;\n      return passiveSupported;\n    }\n  };\n\n  // @ts-ignore\n  window.addEventListener(\"test\", options, options);\n  // @ts-ignore\n  window.removeEventListener(\"test\", options, options);\n} catch (err) {\n  passiveSupported = false;\n}\n\ninterface MicProps {\n  onDown: EventListener;\n  onUp: EventListener;\n  onUnmount: () => void;\n  clientState: ClientState;\n  classNames: string;\n}\n\nexport class Mic extends React.Component<MicProps, {}> {\n  private readonly rootDiv: React.RefObject<HTMLDivElement>;\n  private readonly onKeyUp: EventListener;\n  private readonly onKeyDown: EventListener;\n  private readonly onUnmount: () => void;\n\n  constructor(props: MicProps) {\n    super(props);\n\n    this.rootDiv = React.createRef<HTMLDivElement>();\n    this.onKeyDown = props.onDown;\n    this.onKeyUp = props.onUp;\n    this.onUnmount = props.onUnmount;\n  }\n\n  private addEventListener(event: string, cb: EventListener) {\n    if (this.rootDiv.current === null) {\n      return;\n    }\n\n    this.rootDiv.current.addEventListener(event, cb, passiveSupported ? { passive: false } : false);\n  }\n\n  private removeEventListener(event: string, cb: EventListener) {\n    if (this.rootDiv.current === null) {\n      return;\n    }\n\n    this.rootDiv.current.removeEventListener(event, cb);\n  }\n\n  componentDidMount() {\n    document.onkeydown = e => handleSpacebar(e, this.onKeyDown);\n    document.onkeyup = e => handleSpacebar(e, this.onKeyUp);\n\n    this.addEventListener(\"touchstart\", this.onKeyDown);\n    this.addEventListener(\"touchend\", this.onKeyUp);\n    this.addEventListener(\"mousedown\", this.onKeyDown);\n    this.addEventListener(\"mouseup\", this.onKeyUp);\n  }\n\n  componentWillUnmount() {\n    document.onkeydown = null;\n    document.onkeyup = null;\n\n    this.removeEventListener(\"touchstart\", this.onKeyDown);\n    this.removeEventListener(\"touchend\", this.onKeyUp);\n    this.removeEventListener(\"mousedown\", this.onKeyDown);\n    this.removeEventListener(\"mouseup\", this.onKeyUp);\n\n    this.onUnmount();\n  }\n\n  render() {\n    const clientConnecting = this.props.clientState === ClientState.Connecting;\n    const clientConnected = this.props.clientState >= ClientState.Connected;\n\n    const rootClassName = `Microphone ${this.props.classNames}`;\n\n    const micClassName = classNames(\"Microphone__button\", {\n      hidden: !clientConnected,\n      Microphone__button__active: this.props.clientState === ClientState.Recording,\n      Microphone__button__inactive: this.props.clientState === ClientState.Stopping\n    });\n\n    const helpClassName = classNames(\"Microphone__help\", \"HelpText\", {\n      hidden: !clientConnected\n    });\n    console.log(\"Client state: \" + stateToString(this.props.clientState));\n    console.log(micClassName);\n    return (\n      <div className={rootClassName} ref={this.rootDiv}>\n        <div style={{height: '50px'}}></div>\n        {clientConnecting && <CircularProgress size=\"3vh\" className=\"Microphone__loading\" />}\n        <div className={micClassName}>\n          <object>\n            <svg xmlns=\"http://www.w3.org/2000/svg\" aria-hidden=\"true\" tabIndex={0} viewBox=\"-2 -2 24 24\">\n              <circle stroke=\"#d8dfe6\" strokeWidth=\"0.5\" cx=\"10\" cy=\"10\" r=\"15\" fill=\"#ffffff\" />\n              <path d=\"M10 10\" />\n              <path\n                transform=\"translate(2,2) scale(0.8)\"\n                x=\"10\"\n                y=\"10\"\n                d=\"M9 18v-1.06A8 8 0 0 1 2 9h2a6 6 0 1 0 12 0h2a8 8 0 0 1-7 7.94V18h3v2H6v-2h3zM6 4a4 4 0 1 1 8 0v5a4 4 0 1 1-8 0V4z\"\n              />\n            </svg>\n          </object>\n        </div>\n        <div className={helpClassName}>Press and hold space bar to talk</div>\n      </div>\n    );\n  }\n}\n\nfunction handleSpacebar(e: KeyboardEvent, cb: EventListener) {\n  if (e.keyCode === 32) {\n    e.preventDefault();\n    cb(e);\n  }\n}","import {Segment, Entity} from \"@speechly/browser-client\";\nimport {CanvasEditor} from './CanvasEditor';\n\nconst entity2canonical: { [key: string]: string; } = {\n    \"sepia\": \"sepia\",\n    \"vintage\": \"vintage\",\n    \"classic\": \"vintage\",\n    \"faded\": \"sepia\",\n    \"grayscale\": \"grayscale\",\n    \"black and white\": \"grayscale\",\n    \"kodachrome\": \"kodachrome\",\n    \"technicolor\": \"technicolor\",\n    \"polaroid\": \"polaroid\",\n    'luminosity': 'brightness',\n    'brightness': 'brightness',\n    'light': 'brightness',\n    'contrast': 'contrast',\n    'saturation': 'saturation',\n    'color': 'saturation'\n}\n\nconst updateImageEditorBySegmentChange = (segment: Segment, imageEditor: CanvasEditor) => {\n    if (!segment.isFinal) {\n        return\n    }\n    if (segment.intent.intent.length > 0) {\n        const intent = segment.intent;\n        if (intent.intent === \"undo\") {\n            imageEditor.undo();\n        } else if (intent.intent === \"add_filter\") {\n            const filterName = collectEntity(segment.entities, \"filter\");\n            if (filterName in entity2canonical) {\n                imageEditor.enableFilter(entity2canonical[filterName]);\n            }\n        } else if (intent.intent === \"remove_filter\") {\n            const filterName = collectEntity(segment.entities, \"filter\");\n            if (filterName in entity2canonical) {\n                imageEditor.disableFilter(entity2canonical[filterName]);\n            }\n        } else if (intent.intent === \"increase\") {\n            const propertyName = collectEntity(segment.entities, \"property\");\n            if (propertyName in entity2canonical) {\n                imageEditor.incrementProperty(entity2canonical[propertyName]);\n            }\n        } else if (intent.intent === \"decrease\") {\n            const propertyName = collectEntity(segment.entities, \"property\");\n            if (propertyName in entity2canonical) {\n                imageEditor.decrementProperty(entity2canonical[propertyName]);\n            }\n        }\n    }\n};\n\nconst collectEntity = (entityList: Entity[], entityType: string) => {\n    const entities = entityList.filter(item => item.type === entityType);\n    if (entities.length > 0) {\n        // In our case there should only be a single entity of a given type in a segment,\n        // so we just return the first item on the list if it exists.\n        return entities[0].value.toLowerCase();\n    }\n    return '';\n}\n\nexport default updateImageEditorBySegmentChange;","// @ts-nocheck\nimport React, { Component } from \"react\";\nimport {\n  Client,\n  ClientState,\n  Segment,\n  SegmentChangeCallback,\n} from \"@speechly/browser-client\";\nimport {CanvasEditor} from './CanvasEditor';\nimport updateImageEditorBySegmentChange from './speechlyTools';\n\ntype IConnectionContextProps = {\n  appId: string;\n  language: string;\n  imageEditor: CanvasEditor;\n  transcriptDiv: HTMLDivElement;\n};\n\ntype IConnectionContextState = {\n  stopContext: (event: any) => void;\n  startContext: (event: any) => void;\n  closeClient: () => void;\n  clientState: ClientState;\n  words: {};\n  contextId: string;\n};\n\nconst defaultState: IConnectionContextState = {\n  stopContext: (_event: Event) => {},\n  startContext: (_event: Event) => {},\n  clientState: ClientState.Disconnected,\n  words: {},\n  contextId: \"\"\n};\n\nconst ConnectionContext = React.createContext<IConnectionContextState>(defaultState);\nclass ConnectionContextProvider extends Component<IConnectionContextProps, IConnectionContextState> {\n    constructor(props: any) {\n        super(props);\n\n        const clientBasicParams = {\n            appId: this.props.appId,\n            language: this.props.language\n        };\n\n        console.log(\"Initializing client\", clientBasicParams);\n        this.client = new Client(clientBasicParams);\n        this.client.onSegmentChange(this.updateStateBySegmentChange);\n        this.client.onStateChange(this.browserClientStateChanged);\n\n        this.state = defaultState;\n    }\n\n    browserClientStateChanged = (clientState: ClientState) => {\n        this.setState({...this.state, clientState });\n    };\n\n    updateStateBySegmentChange: SegmentChangeCallback = (segment: Segment) => {\n        this.updateWords(segment.words, segment.contextId, segment.id);\n        updateImageEditorBySegmentChange(segment, this.props.imageEditor);\n    };\n\n    updateWords = (words: Word[], contextId: string, segmentId: number) => {\n      let newWords = {};\n      if(this.state.contextId === contextId) {\n          newWords = this.state.words;\n      }\n\n      for (var i = 0; i < words.length; i++) {\n          if(words[i] && \"index\" in words[i]) {\n              newWords[parseInt(words[i].index)] = words[i];\n          }\n      }\n\n      this.setState({\n          ...this.state,\n          words: newWords,\n          contextId });\n\n      const transcriptDiv = this.props.transcriptDiv;\n      if(newWords) {\n          const html = Object.keys(newWords).map(key => parseInt(key)).sort()\n                .map((key) => (newWords[key].isFinal ? `<b>${newWords[key].value}</b>` : newWords[key].value))\n                .join(\" \"); \n          transcriptDiv.innerHTML = html;\n      }\n    };\n\n    startContext = (event: any) => {\n        if (this.state.clientState === ClientState.Disconnected) {\n            this.client.initialize((err?: Error) => {\n                if (err) {\n                    console.error(\"Error initializing Speechly client:\", err);\n                    return;\n                }\n            });\n            return;\n        }\n\n        if (this.state.clientState === ClientState.Connected) {\n            this.client.startContext((err?: Error) => {\n                if (err) {\n                    console.error(\"Could not start recording\", err);\n                    return;\n                }\n            });\n        }\n    };\n\n    stopContext = (event: any) => {\n        if (this.state.clientState !== ClientState.Recording) {\n            return;\n        }\n\n        this.client.stopContext((err?: Error) => {\n            if (err) {\n                console.error(\"Could not stop recording\", err);\n                return;\n            }\n        });\n    };\n\n    readonly closeClient = () => {\n        if (this.state.clientState < ClientState.Connected) {\n            return;\n        }\n        try {\n            this.client.close((err?: Error) => {\n                if (err !== undefined) {\n                    console.error(\"Could not close client\", err);\n                }\n            });\n        } catch (err) {\n            console.error(\"Could not close client\", err);\n        }\n    };\n\n    render() {\n        return (\n                <ConnectionContext.Provider\n            value={{\n                ...this.state,\n                startContext: this.startContext,\n                stopContext: this.stopContext,\n                closeClient: this.closeClient\n            }}\n                >\n                {this.props.children}\n            </ConnectionContext.Provider>\n        );\n    }\n}\n\nexport default ConnectionContext;\nexport { ConnectionContextProvider };\n","import {fabric} from 'fabric';\nimport { Canvas as FabricCanvas } from 'fabric/fabric-impl';\n\n\ninterface EditorState {\n    [name: string]: number;\n}\n\ninterface Operator {\n    type: string;\n    name: string;\n    value: number;\n}\n\nexport class CanvasEditor {\n    editorHTMLDiv: HTMLDivElement;\n    imageUrl: string;\n    canvas: FabricCanvas;\n    htmlCanvas: HTMLCanvasElement;\n    operatorStack: Operator[];\n    imageObject: fabric.Image;\n    stepSize: Map<string, number> = new Map<string, number>();\n\n    constructor(editorHTMLDiv: HTMLDivElement, imageUrl: string) {\n        this.editorHTMLDiv = editorHTMLDiv;\n        this.imageUrl = imageUrl;\n\n        this.htmlCanvas = document.createElement('canvas');\n        this.htmlCanvas.id = \"canvas\";\n        this.resize();\n        this.editorHTMLDiv.appendChild(this.htmlCanvas);\n\n        fabric.Object.prototype.transparentCorners = false;\n\n        const canvas = new fabric.Canvas(this.htmlCanvas);\n        this.canvas = canvas;\n        this.imageObject = new fabric.Image();\n        const outerScope = this;\n        fabric.Image.fromURL(imageUrl, function(img: fabric.Image) {\n            if (img) {\n                outerScope.imageObject = img;\n                const oImg = resizeElements(img, canvas);\n                outerScope.canvas.add(oImg);\n            }\n        });\n\n        this.stepSize.set('brightness', 0.1);\n        this.stepSize.set('contrast', 0.1);\n        this.stepSize.set('saturation', 0.2);\n\n        this.operatorStack = []\n    }\n\n    public incrementProperty = (propertyName: string) => {\n        console.log('incrementProperty ' + propertyName)\n        let tmp = this.stepSize.get(propertyName)\n        this.operatorStack.push({type: 'property',\n                                 name: propertyName,\n                                 value: (tmp) ? tmp : 0});\n        this.updateImage();\n    }\n\n    public decrementProperty = (propertyName: string) => {\n        console.log('decrementProperty ' + propertyName)\n        let tmp = this.stepSize.get(propertyName)\n        this.operatorStack.push({type: 'property',\n                                 name: propertyName,\n                                 value: (tmp) ? -1*tmp : 0});\n        this.updateImage();\n    }\n\n    public enableFilter = (filterName: string) => {\n        console.log('enableFilter ' + filterName)\n        this.operatorStack.push({type: 'filter',\n                                  name: filterName,\n                                  value: 1});\n        this.updateImage();\n    }\n\n    public disableFilter = (filterName: string) => {\n        console.log('disableFilter ' + filterName)\n        this.operatorStack.push({type: 'filter',\n                                  name: filterName,\n                                  value: 0});\n        this.updateImage();\n    }\n\n    public undo = () => {\n        console.log('at undo');\n        this.operatorStack.pop();\n        this.updateImage();\n    }\n\n    private updateImage = () => {\n        console.log(this.operatorStack);\n        let state: EditorState = this.buildEditorState();\n        console.log(state);\n        this.imageObject.filters = [];\n\n        if (state.brightness !== 0.0) {\n            let filter = new fabric.Image.filters.Brightness({brightness: state.brightness});\n            this.imageObject.filters.push(filter);\n        }\n\n        if (state.contrast !== 0.0) {\n            let filter = new fabric.Image.filters.Contrast({contrast: state.contrast});\n            this.imageObject.filters.push(filter);\n        }\n\n        if (state.saturation !== 0.0) {\n            let filter = new fabric.Image.filters.Saturation({saturation: state.saturation});\n            this.imageObject.filters.push(filter);\n        }\n\n        if (state.kodachrome > 0) {\n            let filter = this.makeKodachromeFilter();\n            this.imageObject.filters.push(filter);\n        }\n\n        if (state.vintage > 0) {\n            let filter = this.makeVintageFilter();\n            this.imageObject.filters.push(filter);\n        }\n\n        if (state.technicolor > 0) {\n            let filter = this.makeTechnicolorFilter();\n            this.imageObject.filters.push(filter);\n        }\n\n        if (state.polaroid > 0) {\n            let filter = this.makePolaroidFilter();\n            this.imageObject.filters.push(filter);\n        }\n\n        if (state.sepia > 0) {\n            let filter = new fabric.Image.filters.Sepia();\n            this.imageObject.filters.push(filter);\n        }\n\n        if (state.grayscale > 0) {\n            let filter = new fabric.Image.filters.Grayscale();\n            this.imageObject.filters.push(filter);\n        }\n\n        this.imageObject.applyFilters()\n        this.canvas.renderAll()\n    }\n\n    private buildEditorState = (): EditorState => {\n        // const state = new EditorState();\n        let state: EditorState = this.cleanEditorState();\n        for (let op of this.operatorStack) {\n            if (op.type === 'property') {\n                state[op.name] += op.value;\n            }\n            else if (op.type === 'filter') {\n                state[op.name] = op.value;\n            }\n        }\n        return state;\n    }\n\n    private cleanEditorState = (): EditorState => {\n        return {\n            brightness: 0.0,\n            contrast: 0.0,\n            saturation: 0.0,\n            grayscale: 0,\n            kodachrome: 0,\n            vintage: 0,\n            sepia: 0,\n            technicolor: 0,\n            polaroid: 0\n        };\n    }\n\n    private resize = () => {\n        const w = window.innerWidth\n        const h = window.innerHeight\n        this.htmlCanvas.width = w\n        this.htmlCanvas.height = h\n        this.htmlCanvas.style.width = `${w}px`\n        this.htmlCanvas.style.height = `${h}px - 60px`\n    }\n\n    private makeKodachromeFilter = () : fabric.IBaseFilter => {\n        console.log('at makeKodachromeFilter')\n        return new fabric.Image.filters.ColorMatrix({\n            matrix: [\n                1.1285582396593525, -0.3967382283601348, -0.03992559172921793, 0, 63.72958762196502,\n                -0.16404339962244616, 1.0835251566291304, -0.05498805115633132, 0, 24.732407896706203,\n                -0.16786010706155763, -0.5603416277695248, 1.6014850761964943, 0, 35.62982807460946,\n                0, 0, 0, 1, 0\n            ]\n        });\n    }\n\n    private makeVintageFilter = () : fabric.IBaseFilter => {\n        console.log('at makeVintageFilter')\n        return new fabric.Image.filters.ColorMatrix({\n            matrix: [\n                0.62793,0.32021,-0.03965,0,0.03784,\n                0.02578,0.64411,0.03259,0,0.02926,\n                0.04660,-0.08512,0.52416,0,0.02023,\n                0,0,0,1,0\n            ]\n        });\n    }\n\n\n    private makeTechnicolorFilter = () : fabric.IBaseFilter => {\n        console.log('at makeTechnicolorFilter')\n        return new fabric.Image.filters.ColorMatrix({\n            matrix: [\n                1.91252,-0.85453,-0.09155,0,0.04624,\n                -0.30878,1.76589,-0.10601,0,-0.27589,\n                -0.23110,-0.75018,1.84759,0,0.12137,\n                0,0,0,1,0\n            ]\n        });\n    }\n\n\n    private makePolaroidFilter = () : fabric.IBaseFilter => {\n        console.log('at makePolaroidFilter')\n        return new fabric.Image.filters.ColorMatrix({\n            matrix: [\n                1.438,-0.062,-0.062,0,0,\n                -0.122,1.378,-0.122,0,0,\n                -0.016,-0.016,1.483,0,0,\n                0,0,0,1,0\n            ]\n        });\n    }\n}\n\n\nconst resizeElements = (img: fabric.Image,\n                        canvas: fabric.Canvas) : fabric.Image => {\n    const imageScaler = 0.7 // make it slightly smaller\n    const imageOriginalHeight = img.height || 1000;\n    const imageOriginalWidth = img.width || 1000;\n    const imgRatio = imageOriginalHeight/ imageOriginalWidth;\n    const winRatio = window.innerHeight / window.innerWidth;\n    const container = document.getElementsByClassName(\"canvas-container\")[0] as HTMLDivElement;\n    let oImg: fabric.Image;\n    if (imgRatio < winRatio) {\n        const w = window.innerWidth * imageScaler;\n        const h = (w * imgRatio) * imageScaler;\n        const scaleX = w / imageOriginalWidth;\n        const scaleY = h / imageOriginalHeight;\n        oImg = img.set({\n            left: 0,\n            top: (window.innerHeight - h) / 10,\n            scaleX: scaleX,\n            scaleY: scaleY\n        }) as fabric.Image;\n        container.style.height = `${h}px`;\n    } else {\n        const w = (window.innerWidth * winRatio / imgRatio) * imageScaler;\n        const h = window.innerHeight * imageScaler;\n        const scaleX = w / imageOriginalWidth;\n        const scaleY = h / imageOriginalHeight;\n        oImg = img.set({\n            left: (window.innerWidth - w) / 2,\n            top: 0,\n            scaleX: scaleX,\n            scaleY: scaleY\n        }) as fabric.Image;\n        container.style.height = `${h}px`;\n    }\n    return oImg;\n};\n","import React, { useEffect, useRef, useState } from \"react\";\nimport {NavLinkProps} from \"react-router-dom\";\nimport {Location} from \"history\";\nimport './layout.css';\nimport { Mic } from \"./Mic\";\nimport ConnectionContext, { ConnectionContextProvider } from \"./ConnectionContext\";\nimport {CanvasEditor} from './CanvasEditor';\n\ninterface ExtendedLocation extends Location {\n    imgPath: string;\n};\n\ntype LocalStorageObject = {\n    imgPath: string;\n};\n\nconst LocalStorageKey = 'Speechly-image-editor-imagePath';\nconst Editor = (props: NavLinkProps) => {\n    const imageEditorRef = useRef<HTMLDivElement>(null);\n    const transcriptDivRef = useRef<HTMLDivElement>(null);\n    const [imageEditorInstance, setImageEditorInstance] = useState<CanvasEditor>();\n    const [imagePath, setImagePath] = useState<string>();\n    const appId = process.env.REACT_APP_APP_ID;\n    if(!appId) {\n        throw new Error('REACT_APP_APP_ID environment variable is undefined!')\n    }\n    const language = process.env.REACT_APP_LANGUAGE;\n    if(!language) {\n        throw new Error('REACT_APP_LANGUAGE environment variable is undefined!')\n    }\n\n    useEffect(() => {\n        if(props.location) {\n            const location = props.location as ExtendedLocation;\n            let imgPath = location.imgPath;\n            if(imgPath) {\n                const storageObject: LocalStorageObject = { imgPath: imgPath };\n                localStorage.setItem(LocalStorageKey, JSON.stringify(storageObject));\n            } else {\n                const json: string = localStorage.getItem(LocalStorageKey) as string;\n                const storageObject: LocalStorageObject = JSON.parse(json) as LocalStorageObject;\n                imgPath = storageObject.imgPath;\n            }\n            setImagePath(imgPath);\n        }\n    }, [props.location]);\n    \n    useEffect(() => {\n        if (!imageEditorInstance && imagePath) {\n            const editor = new CanvasEditor(imageEditorRef.current as HTMLDivElement, imagePath as string);\n            setImageEditorInstance(editor);\n        }\n    }, [imageEditorRef, imagePath, imageEditorInstance]);\n    \n    return (\n        <div>\n            <section className=\"photo\">\n                <div ref={imageEditorRef} />\n            </section>\n            <section className=\"app\">\n                <div ref={transcriptDivRef} />\n            </section>\n\n            <section className=\"controls\">\n            <ConnectionContextProvider \n                appId={appId} \n                language={language} \n                imageEditor={imageEditorInstance as CanvasEditor}\n                transcriptDiv={transcriptDivRef.current as HTMLDivElement} >\n                <ConnectionContext.Consumer>\n                    {({ stopContext, startContext, closeClient, clientState }) => {\n                        return (\n                            <div>\n                                <Mic \n                                onUp={stopContext}\n                                onDown={startContext}\n                                onUnmount={closeClient}\n                                clientState={clientState}\n                                classNames=\"Playground__mic\" />\n                                <section className=\"app\">\n                                    <i><b>Try out these:</b></i>\n                                    <ul>\n                                        <li>make it black and white</li>\n                                        <li>add technicolor</li>\n                                        <li>deactivate black and white</li>\n                                        <li>add more light</li>\n                                        <li>less light</li>\n                                        <li>make it polaroid and reduce contrast</li>\n                                        <li>increase saturation and make it classic</li>\n                                    </ul>\n                                </section>\n                            </div>\n                        );\n                    }}\n                </ConnectionContext.Consumer>\n            </ConnectionContextProvider>\n            </section>\n        </div>\n    );\n};\n\nexport default Editor;","import \"./layout.css\";\nimport React, { useRef, useState } from \"react\";\nimport {Link} from \"react-router-dom\";\nimport logo from './img/logo.png';\n\ntype Images = {\n    imgPath: string[]\n}\n\nconst Onboard = () => {\n    const [allowAudio, setAllowAudio] = useState<boolean>(false);\n    const [images, setImages] = useState<Images>({imgPath: [process.env.PUBLIC_URL + '/images/microphone_smaller.jpg']});\n    const imageInput = useRef<HTMLInputElement>(null);\n\n    const addFile = () => {\n        if (imageInput.current?.files) {\n            const newImage = imageInput.current.files[0];\n            setImages({\n                imgPath: [...images.imgPath, URL.createObjectURL(newImage)]\n            })\n        }\n    };\n    \n    const buttonClass = (allowAudio) ? 'btn' : 'btn btn-disabled'\n    const lastImage: string = images.imgPath.slice(-1)[0];\n    const editorLinkParams = { \n        pathname: \"/edit/\", \n        imgPath: lastImage\n    };\n    return (\n        <div>\n            <section className=\"app intro\">\n\n            <img className=\"logo\" src={logo} alt=\"\"></img>\n            <section className=\"onboarding\">\n                <h1>Use speech to edit and apply filters for your  photos and images</h1>\n\n                <section className=\"gallery\">\n                    {images.imgPath.map((path: string, index: number) => {\n                        return (\n                            <section className=\"thumbnail\" key={index}>\n                                <img src={path} alt=\"\"></img>\n                            </section>\n                        )\n                    })}\n                    \n                    <section className=\"upload upload-btn-wrapper\">\n                        <button className=\"upload-btn\">Upload</button>\n                        <input type=\"file\" name=\"myfile\" ref={imageInput} onChange={addFile}/>\n                    </section>\n                </section>\n\n                <section className=\"formRow\">\n                    <input type=\"checkbox\" name=\"micro\" id=\"micro\" value=\"\" \n                        checked={allowAudio} \n                        onChange={(value) => setAllowAudio(value.target.checked)}></input>\n                    <label htmlFor=\"micro\">Allow Audio to control over voice</label>\n                </section>\n\n                <Link to={editorLinkParams} className={buttonClass}>Start editing</Link>\n                </section>\n            </section>\n        </div>\n    );\n};\n\nexport default Onboard;","import React from \"react\";\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Editor from \"./Editor\";\nimport Onboard from \"./Onboard\";\n  \nconst App = () => {\n\n    return (\n        <div>\n            <Router>\n                <Switch>\n                    <Route exact path=\"/\" component={Onboard} />\n                    <Route exact path=\"/edit\" component={Editor} />\n                </Switch>\n            </Router>\n        </div>\n    );\n};\n\nexport default App;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));","module.exports = __webpack_public_path__ + \"static/media/logo.4ecbb0d2.png\";"],"sourceRoot":""}